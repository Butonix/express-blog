{
  "swagger": "2.0",
  "info": {
    "title": "Express Blog",
    "version": "1.0.0",
    "description": "An open API to my own MEVN (MongoDB, Express, Vue.js, Node.js) site similar to reddit.com or pikabu.ru (mostly copies many pikabu features) with many different and awesome features, open swagger API documentation. Main reason of making this site is fun and learning new things while making it"
  },
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "myCookie": {
      "type": "apiKey",
      "name": "Cookie",
      "in": "header"
    }
  },
  "paths": {
    "/comments": {
      "get": {
        "summary": "Get user's comments or comments in a post",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "description": "The number of items to skip before starting to collect the result set."
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "description": "The numbers of items to return."
          },
          {
            "in": "query",
            "name": "login",
            "type": "string",
            "description": "user which comments you want to see",
            "example": "user123"
          },
          {
            "in": "query",
            "name": "post",
            "required": true,
            "type": "string",
            "description": "post id",
            "example": "5d546c95c0f3a272b2062205"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        }
      }
    },
    "/users/{login}/template": {
      "get": {
        "summary": "Get user saved template",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "myCookie": []
          }
        ],
        "description": "Returns user's saved template for post",
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "type": "string",
            "required": true,
            "description": "User name",
            "example": "user1"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "attachments": {
                  "description": "Array of pic paths",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      },
      "put": {
        "summary": "Update user template",
        "tags": [
          "Users"
        ],
        "description": "Update user post template, delete attachments (pics with following paths)",
        "security": [
          {
            "myCookie": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "type": "string",
            "required": true,
            "description": "User name",
            "example": "user1"
          },
          {
            "in": "body",
            "name": "template",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "body": {
                  "type": "string"
                },
                "delete": {
                  "type": "array",
                  "items": {
                    "description": "path to pic",
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/OK"
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Register a user",
        "tags": [
          "Users"
        ],
        "description": "Register a new user and return its cookie token (connect.sid)",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "schema": {
              "type": "object",
              "required": [
                "login",
                "password",
                "confirm"
              ],
              "description": "user's credential",
              "properties": {
                "login": {
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 10
                },
                "password": {
                  "type": "string",
                  "minLength": 6
                },
                "confirm": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/OK"
            }
          },
          "422": {
            "$ref": "#/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/users/auth": {
      "post": {
        "summary": "Login to the application",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user's credential",
            "schema": {
              "type": "object",
              "required": [
                "login",
                "password"
              ],
              "properties": {
                "login": {
                  "type": "string",
                  "example": "user123"
                },
                "password": {
                  "type": "string",
                  "example": "u1234"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Authorization information is missing or invalid."
          },
          "422": {
            "description": "Validation error"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "summary": "Log out the current user",
        "security": [
          {
            "myCookie": []
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "post": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "author": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "login": {
              "type": "string"
            }
          }
        },
        "createdAt": {
          "type": "string",
          "example": "2019-08-16T01:04:02.504Z"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "message"
      ]
    },
    "OK": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "example": true
        }
      }
    }
  },
  "responses": {
    "NotFound": {
      "description": "The specified resource was not found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "Unauthorized": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "Forbidden": {
      "description": "Not enough rights",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "UnprocessableEntity": {
      "description": "Validation error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "parameters": {},
  "tags": [
    "Comments",
    {
      "name": "Users",
      "description": "Actions with Users collection"
    }
  ]
}